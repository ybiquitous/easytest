module Easytest
  class Runner
    @cases: Array[Case]

    @hooks: Array[Hook]

    def run: () -> void

    def cases: () -> Array[Case]

    def add_case: (Case new_case) -> void

    def hooks: () -> Array[Hook]

    def add_hook: (Hook hook) -> void

    private

    attr_reader start_time: Time

    attr_reader no_tests_forbidden: bool
    alias no_tests_forbidden? no_tests_forbidden

    attr_accessor passed_count: Integer

    attr_accessor failed_count: Integer

    attr_accessor skipped_count: Integer

    attr_accessor todo_count: Integer

    attr_accessor file_count: Integer

    def initialize: (?start_time: Time, ?no_tests_forbidden: bool) -> void

    def total_count: () -> Integer

    def all_passed?: () -> bool

    def no_tests?: () -> bool

    def print_error_for_no_tests: () -> void

    def print_reports: (Array[[Symbol, String]] reports) -> void

    def elapsed_time: () -> Float

    def summary: () -> String
  end
end
